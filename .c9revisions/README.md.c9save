{"ts":1353430338295,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"# README for a newly created project.\n\nThere are a couple of things you should do first, before you can use all of Git's power:\n\n  * Add a remote to this project: in the Cloud9 IDE command line, you can execute the following commands\n    `git remote add [remote name] [remote url (eg. 'git@github.com:/ajaxorg/node_chat')]` [Enter]\n  * Create new files inside your project\n  * Add them to to Git by executing the following command\n    `git add [file1, file2, file3, ...]` [Enter]\n  * Create a commit which can be pushed to the remote you just added\n    `git commit -m 'added new files'` [Enter]\n  * Push the commit the remote\n    `git push [remote name] master` [Enter]\n\nThat's it! If this doesn't work for you, please visit the excellent resources from [Github.com](http://help.github.com) and the [Pro Git](http://http://progit.org/book/) book.\nIf you can't find your answers there, feel free to ask us via Twitter (@cloud9ide), [mailing list](groups.google.com/group/cloud9-ide) or IRC (#cloud9ide on freenode).\n\nHappy coding!"]],"start1":0,"start2":0,"length1":0,"length2":1029}]],"length":1029}
{"contributors":[],"silentsave":false,"ts":1353441153747,"patch":[[{"diffs":[[-1,"# README for a newly created project.\n\nThere are a couple of things you should do first, before you can use all of Git's power:\n\n  * Add a remote to this project: in"],[1,"pouch-leaflet\n===\nthe ability to add a geojson layer to [leaflet](http://leafletjs.com/) that is stored in a [pouchdb](http://pouchdb.com/) you can add it from a remote couchdb that is synced to"],[0," the "],[-1,"C"],[0,"lo"],[-1,"ud9 IDE command line, you can execute the following commands\n    `git remote add [remote name] [remote url (eg. 'git@github.com:/ajaxorg/node_chat')]` [Enter]\n  * Create new files inside your project\n  * Add them to to Git by executing the following command\n    `git add [file1, file2, file3, ...]` [Enter]\n  * Create a commit which can be pushed to the remote you just added\n    `git commit -m 'added new files'` [Enter]\n  * Push the commit the remote\n    `git push [remote name] master` [Enter]\n\nThat's it! If this doesn't work for you, please visit the excellent resources from [Github.com](http://help.github.com) and the [Pro Git](http://http://progit.org/book/) book.\nIf you can't find your answers"],[1,"cal one as conectivity permits, for bonus points and because I'm a massacist, it's written in [CoffeeScript](http://coffeescript.org/)\n\nuseage\n```coffeescript\ngeojsonMarkerOptions = \n    radius: 8\n    fillColor: \"#ff7800\"\n    color: \"#000\"\n    weight: 1\n    opacity: 1\n    fillOpacity: 0.8\n\nlayer = new L.GeoJSON.Pouch \"idb://SomeName\", \n\tpointToLayer : (feature, latlng) ->\n        L.circleMarker latlng, geojsonMarkerOptions\n    someOther : option\n\nlayer.addTo(map)\n\nlayer.addDoc GeoJSONfeature\n```\nor\n```javascript\nvar layer = L.geojson.pouch(\"idb://SomeName\", \"http://localhost:5984/someDB\").addTo(map)\n//this will sync from remote to browser,"],[0," there"],[-1,", feel free to ask us via Twitter (@cloud9ide), [mailing list](groups.google.com/group/cloud9-ide) or IRC (#cloud9ide on freenode).\n\nHappy coding!"],[1," are local storage limits, you could also just do\nvar otherLayer = L.geojson.pouch(\"http://localhost:5984/someDB\").addTo(map)\n```"]],"start1":0,"start2":0,"length1":1029,"length2":983}]],"length":983,"saved":false}
{"contributors":[],"silentsave":false,"ts":1353441816550,"patch":[[{"diffs":[[0,"rg/)\n\nus"],[-1,"e"],[0,"age\n```c"]],"start1":331,"start2":331,"length1":17,"length2":16},{"diffs":[[0,"dTo(map)\n```"],[1,"\nvery rought hold tight for demos and stuff"]],"start1":970,"start2":970,"length1":12,"length2":55}]],"length":1025,"saved":false}
{"contributors":[],"silentsave":false,"ts":1353502572776,"patch":[[{"diffs":[[0,"nd stuff"],[1,", build with\n\n```bash\ncake build\n```"]],"start1":1017,"start2":1017,"length1":8,"length2":44}]],"length":1061,"saved":false}
{"contributors":[],"silentsave":false,"ts":1353520165051,"patch":[[{"diffs":[[0,".org/)\n\n"],[1,"basic idea if you do \n\n```javascript\nvar syncLayer = L.geojson.pouch(\"idb://synclayer\", \"http://localhost:5984/someDB\", {leaflet: \"options\"}).addTo(map)\n\n"],[0,"usage\n``"]],"start1":329,"start2":329,"length1":16,"length2":170}]],"length":1215,"saved":false}
{"ts":1353525305161,"patch":[[{"diffs":[[0,"p://"],[-1,"localhost:5984/someDB\", {leaflet: \"options\"}).addTo(map)"],[1,"samehost.com/someDB\", {leaflet: \"options\"}).addTo(map)\n```\nyou get\nmap <-a- indexedDB <-b- couchDB\n\nwith a working if your offline and b should be able to resync if you get disconected and then reconnect\n\nif you change the direcection (default is \"from\") to to e.g.\n\n```javascript\nvar syncLayer = L.geojson.pouch(\"idb://synclayer\", \"http://samehost.com/someDB\", {direction: \"to\"}).addTo(map)\n```\nyou get\n\nmap <-a- indexedDB -b-> couchDB\n\nand you can also do direction both\n\n```javascript\nvar syncLayer = L.geojson.pouch(\"idb://synclayer\", \"http://samehost.com/someDB\", {direction: \"both\"}).addTo(map)\n```\nmap <-a- indexedDB <-b-> couchDB"],[0,"\n\nus"]],"start1":429,"start2":429,"length1":64,"length2":645}]],"length":1796,"saved":false}
{"contributors":[],"silentsave":false,"ts":1353679100172,"patch":[[{"diffs":[[0,"DB\n\n"],[-1,"usage"],[1,"other option is \"continuous\" which defaults to true, if false then will only sync once\n\nuse layer.sync() to force a sync (this will be helpfull if continuous is false)\n\nother option is layer.cancel() which cancells current replication (only useful if continuous is true)\n"],[0,"\n```"]],"start1":1068,"start2":1068,"length1":13,"length2":279}]],"length":2062,"saved":false}
